{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/gallery.jsx","components/Team.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","getWindowDimensions","window","width","innerWidth","height","innerHeight","Header","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","src","alt","style","resize","borderRadius","backgroundColor","data","paragraph","Features","map","d","i","icon","title","text","class","paddingTop","Gallery","data-lightbox-gallery","Team","name","job","initialState","email","message","Contact","address","phone","color","instagram","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","JsonData","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0737866d.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n\n            Vaaranam Sports\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#features' className='page-scroll'>\n                Features\n              </a>\n            </li>\n            {/* <li>\n              <a href='#about' className='page-scroll'>\n                About\n              </a>\n            </li> */}\n            {/* <li>\n              <a href='#services' className='page-scroll'>\n                Services\n              </a>\n            </li> */}\n\n            <li>\n              <a href='#portfolio' className='page-scroll'>\n                Gallery\n              </a>\n            </li>\n            <li>\n              <a href='#team' className='page-scroll'>\n                Team\n              </a>\n            </li>\n            <li>\n              <a href='#contact' className='page-scroll'>\n                Contact\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nexport const Header = (props) => {\n  const { height, width } = useWindowDimensions();\n\n  return (\n    <header id=\"header\">\n      <div className=\"intro\">\n        <div className=\"overlay\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 col-md-offset-2 intro-text\">\n                <span>\n                  <img\n                    src={`img/logo.png`}\n                    alt=\"Logo\"\n                    style={{\n                      width: width * 0.3,\n                      resize: \"inline\",\n                      borderRadius: width * 0.3,\n                      backgroundColor: \"rgba(255,255,255,0.3)\",\n                    }}\n                  />\n                </span>\n                {/* <h1>\n                  {props.data ? props.data.title : \"Loading\"}\n                  <span></span>\n                </h1> */}\n                <p>{props.data ? props.data.paragraph : \"Loading\"}</p>\n                {/* <a\n                  href='#features'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Learn More\n                </a>{' '} */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","export const Features = (props) => {\n  return (\n    <div id=\"features\" className=\"text-center\">\n      <div className=\"container\">\n        <div className=\"col-md-10 col-md-offset-1 section-title\">\n          <h2>Features</h2>\n        </div>\n\n        <div className=\"row\">\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className=\"col-xs-6 col-md-3\">\n                  {\" \"}\n                  <i className={d.icon}></i>\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : \"Loading...\"}\n        </div>\n        <ul class=\"list-group\" style={{ paddingTop: 24 }}>\n          <li class=\"list-group-item\">\n            Rental (Hour based) booking for football and box cricket\n          </li>\n          <li class=\"list-group-item\">\n            All types of parties and events undertaken\n          </li>\n          <li class=\"list-group-item\">Football Coaching (under 16)</li>\n          <li class=\"list-group-item\">\n            CrossFit and Weight Loss program (all age groups)\n          </li>\n          <li class=\"list-group-item\">Ground Dimensions 40m x 20m 7's</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","export const Gallery = (props) => {\n  return (\n    <div id=\"portfolio\" className=\"text-center\">\n      <div className=\"container\">\n        <div className=\"section-title\">\n          <h2>Gallery</h2>\n          <p></p>\n        </div>\n        <div className=\"row\">\n          <div className=\"portfolio-items\">\n            {[1, 2, 3, 4].map((i) => {\n              return (\n                <div className=\"col-sm-6 col-md-4 col-lg-4\">\n                  <div className=\"portfolio-item\">\n                    <div className=\"hover-bg\">\n                      {\" \"}\n                      <a\n                        href={`img/portfolio/${i}.jpg`}\n                        title=\"Project Title\"\n                        data-lightbox-gallery=\"gallery1\"\n                      >\n                        {/* <div className='hover-text'>\n                      <h4>Lorem Ipsum</h4>\n                    </div> */}\n                        <img\n                          src={`img/portfolio/${i}.jpg`}\n                          className=\"img-responsive\"\n                          alt=\"Project Title\"\n                        />{\" \"}\n                      </a>{\" \"}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Team = (props) => {\n  return (\n    <div id='team' className='text-center'>\n      <div className='container'>\n        <div className='col-md-8 col-md-offset-2 section-title'>\n          <h2>Team</h2>\n          {/* <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit duis sed\n            dapibus leonec.\n          </p> */}\n        </div>\n        <div id='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-3 col-sm-6 team'>\n                  <div className='thumbnail'>\n                    {' '}\n                    {/* <img src={d.img} alt='...' className='team-img' /> */}\n                    <div className='caption'>\n                      <h4>{d.name}</h4>\n                      <p>{d.job}</p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport emailjs from 'emailjs-com'\n\nconst initialState = {\n  name: '',\n  email: '',\n  message: '',\n}\nexport const Contact = (props) => {\n  const [{ name, email, message }, setState] = useState(initialState)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setState((prevState) => ({ ...prevState, [name]: value }))\n  }\n  const clearState = () => setState({ ...initialState })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(name, email, message)\n    emailjs\n      .sendForm(\n        'YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID'\n      )\n      .then(\n        (result) => {\n          console.log(result.text)\n          clearState()\n        },\n        (error) => {\n          console.log(error.text)\n        }\n      )\n  }\n  return (\n    <div>\n      <div id=\"contact\">\n        <div className=\"container\">\n          {/* <div className='col-md-8'>\n            <div className='row'>\n              <div className='section-title'>\n                <h2>Get In Touch</h2>\n                <p>\n                  Please fill out the form below to send us an email and we will\n                  get back to you as soon as possible.\n                </p>\n              </div>\n              <form name='sentMessage' validate onSubmit={handleSubmit}>\n                <div className='row'>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='text'\n                        id='name'\n                        name='name'\n                        className='form-control'\n                        placeholder='Name'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='email'\n                        id='email'\n                        name='email'\n                        className='form-control'\n                        placeholder='Email'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                </div>\n                <div className='form-group'>\n                  <textarea\n                    name='message'\n                    id='message'\n                    className='form-control'\n                    rows='4'\n                    placeholder='Message'\n                    required\n                    onChange={handleChange}\n                  ></textarea>\n                  <p className='help-block text-danger'></p>\n                </div>\n                <div id='success'></div>\n                <button type='submit' className='btn btn-custom btn-lg'>\n                  Send Message\n                </button>\n              </form>\n            </div>\n          </div> */}\n          <div className=\"col-md-3 col-md-offset-1 contact-info\">\n            <div className=\"contact-item\">\n              <h3>Contact Info</h3>\n              <p>\n                <span>\n                  <i className=\"fa fa-map-marker\"></i> Address\n                </span>\n                {props.data ? props.data.address : \"loading\"}\n              </p>\n            </div>\n            <div className=\"contact-item\">\n              <p>\n                <span>\n                  <i className=\"fa fa-phone\"></i> Phone\n                </span>{\" \"}\n                {props.data ? props.data.phone : \"loading\"}\n              </p>\n            </div>\n            <div className=\"contact-item\">\n              <p>\n                <span>\n                  <i className=\"fa fa-envelope\"></i> Email\n                </span>{\" \"}\n                {props.data ? props.data.email : \"loading\"}\n              </p>\n            </div>\n            <div className=\"contact-item\">\n              <p>\n                <span>\n                  <i className=\"fa fa-map\"></i> Map\n                </span>{\" \"}\n                <a\n                  href={props.data ? props.data.map : \"loading\"}\n                  style={{ color: \"white\" }}\n                >\n                  {props.data ? props.data.map : \"loading\"}\n                </a>\n              </p>\n              <p>\n                <img src=\"img/map.jpg\" className=\"img-responsive\" alt=\"\" />{\" \"}\n              </p>\n            </div>\n          </div>\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"social\">\n                <ul>\n                  <li>\n                    <a href={props.data ? props.data.instagram : \"/\"}>\n                      <i className=\"fa fa-heart\"></i>\n                    </a>\n                  </li>\n                  {/* <li>\n                    <a href={props.data ? props.data.email : '/'}>\n                      <i className='fa fa-inbox'></i>\n                    </a>\n                  </li> */}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"footer\">\n        <div className=\"container text-center\">\n          <p>&copy; 2021 Vaaranam Sports. </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react'\nimport { Navigation } from './components/navigation'\nimport { Header } from './components/header'\nimport { Features } from './components/features'\nimport { About } from './components/about'\nimport { Services } from './components/services'\nimport { Gallery } from './components/gallery'\nimport { Testimonials } from './components/testimonials'\nimport { Team } from './components/Team'\nimport { Contact } from './components/contact'\nimport JsonData from './data/data.json'\nimport SmoothScroll from 'smooth-scroll'\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n})\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({})\n  useEffect(() => {\n    setLandingPageData(JsonData)\n  }, [])\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Features data={landingPageData.Features} />\n      {/* <About data={landingPageData.About} /> */}\n      {/* <Services data={landingPageData.Services} /> */}\n      <Gallery />\n      <Team data={landingPageData.Team} />\n      <Contact data={landingPageData.Contact} />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}